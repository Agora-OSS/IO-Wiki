plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.iowiki'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Flyway
	implementation 'org.flywaydb:flyway-database-postgresql'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// DB
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok, Mapstruct
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// SpringDoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Groovy, Spock
	testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
	testImplementation 'org.apache.groovy:groovy-all:4.0.15'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL 설정
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'build/generated/querydsl']
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

// Jacoco 설정
jacoco {
	toolVersion = '0.8.12'
	reportsDirectory = layout.buildDirectory.dir('reports/jacoco').get().asFile
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		xml.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/jacocoTestReport.xml').get().asFile

		html.required = false
		csv.required = false
	}
}

tasks.withType(Test).configureEach {
	jacoco.includeNoLocationClasses = true
	jacoco.excludes = ['jdk.internal.*', 'org.codehaus.groovy.**']
}

// 테스트 설정
tasks.named('test') {
	useJUnitPlatform()
}
