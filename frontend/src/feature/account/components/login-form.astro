---
import { Button } from "@/core/widgets/button";
import { Input } from "@/core/widgets/input";
import Logo from "../../../assets/logo/bl_50_50_l.svg";
---

<div class="flex flex-col items-center justify-center min-h-screen px-4">
  <div class="w-full max-w-md space-y-8">
    {/* 로고 */}
    <div class="flex justify-center">
        <Logo />
    </div>
  </div>

  <!-- 로그인 폼 -->
  <form id="login-form" method="post" class="mt-8 space-y-6 w-1/2">
    <div class="space-y-6">
      <div>
        <label for="email" class="block text-sm font-medium">
          이메일
        </label>
        <Input
          client:only="react"
          id="email"
          name="email"
          type="email"
          placeholder="name@example.com"
          required
          className="mt-1 block w-full border dark:border-gray-300 rounded-md"
          />
      </div>

      <div>
        <label for="password" class="block text-sm font-medium">
          비밀번호
        </label>
        <Input
          client:only="react"
          id="password"
          name="password"
          type="password"
          placeholder="••••••••"
          required
          className="mt-1 block w-full border dark:border-gray-300 rounded-md"
        />
      </div>
    </div>

    <div class="text-sm text-right">
      <a
        href="/forgot-password"
        class="dark:text-gray-200 text-gray-800 hover:underline"
      >
        비밀번호를 잊으셨나요?
      </a>
    </div>

    <div>
      <Button
        client:only="react"
        type="submit"
        className="w-full bg-black text-white py-2 px-4 rounded-md cursor-pointer"
      >
        로그인
      </Button>
    </div>
  </form>

  {/* 비밀번호 찾기 및 회원가입 */}
  <div class="mt-6 text-center text-sm">
    <p class="dark:text-gray-200 text-gray-800">관리자 승인 후 로그인이 가능합니다.</p>
    <p class="mt-4">
      계정이 없으신가요? {" "}
      <a href="/register" class="underline">
        회원가입
      </a>
    </p>
  </div>
</div>

<script>
import { is, type IValidation } from 'typia';
import { toast } from 'sonner';
import type { Account } from '@/feature/account/domain/entities';
import { AccountUsecase } from '@/feature/account/domain/usecase/AccountUsecase';

const persistentAccountMoveToRootPage = async () => {
  const myDetails = await AccountUsecase.getMyDetails();
  
  if(is<Account>(myDetails)) {
    myDetails.persistent();
  }
  
  document.location.href = '/';
}

document.getElementById('login-form')!.addEventListener('submit', async (event) => {
  event.preventDefault();

  const result = await AccountUsecase.login({
    email: (document.querySelector('#email') as HTMLInputElement).value,
    password: (document.querySelector('#password') as HTMLInputElement).value
  });

  if(is<IValidation.IError>(result)) {
    toast.error(result.value);
  }

  if(result === true) {
    await persistentAccountMoveToRootPage()
  }
});
</script>