---
import { Button } from "@/core/widgets/button";
import { Input } from "@/core/widgets/input";
import Logo from "../../../assets/logo/bl_50_50_l.svg";
---

<div class="flex flex-col items-center justify-center min-h-screen px-4">
  <div class="w-full max-w-md space-y-8">
    {/* 로고 */}
    <div class="flex justify-center">
        <Logo />
    </div>
  </div>

  {/* 회원가입 폼 */}
  <form id="sign-up-form" class="mt-8 space-y-6 w-1/2">
    <div class="space-y-6">
      <div>
        <label for="email" class="block text-sm font-medium">
          이메일
        </label>
        <Input
          client:load
          id="email"
          name="email"
          type="email"
          placeholder="name@example.com"
          required
          className="mt-1 block w-full border dark:border-gray-300 rounded-md"
          />
      </div>

      <div>
        <label for="password" class="block text-sm font-medium">
          비밀번호
        </label>
        <Input
          client:load   
          id="password"
          name="password"
          type="password"
          placeholder="••••••••"
          required
          minLength={8}
          className="mt-1 block w-full border dark:border-gray-300 rounded-md"
        />
      </div>

      <div>
        <label for="password-check" class="block text-sm font-medium">
          비밀번호 확인
        </label>
        <Input
          id="password-check"
          name="password-check"
          type="password"
          placeholder="••••••••"
          required
          minLength={8}
          className="mt-1 block w-full border dark:border-gray-300 rounded-md"
        />
      </div>
    </div>

    <div class="text-sm">
      <span
        class="dark:text-blue-400 text-blue-800"
      >
        비밀번호는 영소문자를 포함한 8자리 이상이어야합니다.
    </span>
    </div>

    <div>
      <Button
        type="submit"
        className="w-full bg-black text-white py-2 px-4 rounded-md cursor-pointer"
      >
        회원가입
      </Button>
    </div>
  </form>

  {/* 비밀번호 찾기 및 회원가입 */}
  <div class="mt-6 text-center text-sm">
    <p class="dark:text-gray-200 text-gray-800">관리자 승인 후 로그인이 가능합니다.</p>
    <p class="mt-4">
      계정이 이미있으신가요? {" "}
      <a href="/login" class="underline">
        로그인
      </a>
    </p>
  </div>
</div>

<script>
  import { AccountUsecase } from '@/feature/account/domain/usecase/AccountUsecase'
  import { toast } from 'sonner'
  import { is, type IValidation } from 'typia'
  import { displayErrors, validateDisplayErrorThenHasError } from '@/core/utils/validator'

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector<HTMLFormElement>('#sign-up-form')!;
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Get form values
      const email = document.querySelector<HTMLInputElement>('#email')!.value.trim();
      const password = document.querySelector<HTMLInputElement>('#password')!.value;
      const passwordCheck = document.querySelector<HTMLInputElement>('#password-check')!.value;
      
      const accountValidate = AccountUsecase.validateAccountInfo({ email, password })
      const emailValidateResult = await AccountUsecase.checkEmailExsist({ email, password })
      
      // Account Regexp error display
      if(validateDisplayErrorThenHasError(accountValidate)) return;
      // has same email check
      if(is<IValidation.IError[]>(emailValidateResult)) { displayErrors(emailValidateResult); return; }
      else if(emailValidateResult.exists === true) {toast.error('이미 존재하는 이메일입니다.'); return;}
      // Check if passwords match
      if (password !== passwordCheck) {  return; }
      
      try {
        // Call the AccountUsecase.register method
        const response = await AccountUsecase.register({
          email,
          password
        });
        
        // Handle successful registration
        console.log('Registration successful:', response);
        alert("회원가입이 정상적으로 처리되었습니다. 관리자 승인을 기다려주세요.")
        window.location.href = '/login'; // Redirect to login page
      } catch (error) {
        console.error('Registration failed:', error);
      }
    });
  });
</script>